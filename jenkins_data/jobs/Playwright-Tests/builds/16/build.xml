<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1520.v56d65e3b_4566">
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.BooleanParameterValue>
          <name>RUN_SMOKE</name>
          <description>Run smoke tests</description>
          <value>false</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>RUN_REGRESSION</name>
          <description>Run regression tests</description>
          <value>false</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>RUN_API</name>
          <description>Include API tests</description>
          <value>true</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>RUN_VISUAL</name>
          <description>Include visual regression tests</description>
          <value>false</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>RUN_E2E</name>
          <description>Include E2E tests</description>
          <value>false</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>RUN_CHROME</name>
          <description>Run tests in Chrome</description>
          <value>true</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>RUN_FIREFOX</name>
          <description>Run tests in Firefox</description>
          <value>false</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>RUN_WEBKIT</name>
          <description>Run tests in WebKit</description>
          <value>false</value>
        </hudson.model.BooleanParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>RUN_SMOKE</string>
        <string>RUN_REGRESSION</string>
        <string>RUN_API</string>
        <string>RUN_VISUAL</string>
        <string>RUN_E2E</string>
        <string>RUN_CHROME</string>
        <string>RUN_FIREFOX</string>
        <string>RUN_WEBKIT</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.2.32-476.v5042e1c1edd7">
      <queuingDurationMillis>73</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>15</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@752.vdddedf804e72">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12">
      <stagesUUID>527cb6db-e3ae-4978-846b-5c8907594c57</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2255.v56a_15e805f12">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Setup</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def getTestTags = {
                        def tags = []
                        if (params.RUN_SMOKE) tags.add(&apos;@smoke&apos;)
                        if (params.RUN_REGRESSION) tags.add(&apos;@regression&apos;)
                        return tags.join(&apos;|&apos;)
                    }

                    // Browser selection helper
                    def getSelectedBrowsers = {
                        def browsers = []
                        if (params.RUN_CHROME) browsers.add(&apos;Chrome&apos;)
                        if (params.RUN_FIREFOX) browsers.add(&apos;Firefox&apos;)
                        if (params.RUN_WEBKIT) browsers.add(&apos;Webkit&apos;)
                        return browsers
                    }

                    // Store for use in other stages
                    env.GREP_PATTERN = getTestTags()
                    env.BROWSERS = getSelectedBrowsers().join(&apos;,&apos;)</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">sh &quot;&quot;&quot;
                        docker run --rm \\
                        -v ${env.HOST_PROJECT_PATH}:/app \\
                        -w /app \\
                        playwright-tests \\
                        npm ci
                    &quot;&quot;&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Validate Environment</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">if (!env.BROWSERS) {
                        error &apos;No browsers selected for testing&apos;
                    }
                    if (!env.GREP_PATTERN) {
                        echo &apos;No test patterns selected, will run all tests&apos;
                    }
                    echo &quot;Selected Browsers: ${env.BROWSERS}&quot;
                    echo &quot;Test Pattern: ${env.GREP_PATTERN}&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <post>
                  <conditions>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                      <condition>always</condition>
                      <branch>
                        <name>default</name>
                        <steps>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                            <name>script</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>scriptBlock</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">try {
                            sh &quot;&quot;&quot;
                                docker run --rm \\
                                -v ${env.HOST_PROJECT_PATH}:/app \\
                                -v ${env.WORKSPACE}:/workspace \\
                                -w /app \\
                                playwright-tests \\
                                sh -c &quot;cp -r playwright-report /workspace/ 2&gt;/dev/null || true; cp -r test-results /workspace/ 2&gt;/dev/null || true&quot;
                            &quot;&quot;&quot;
                            
                            publishHTML([
                                allowMissing: false,
                                alwaysLinkToLastBuild: true,
                                keepAll: true,
                                reportDir: &apos;playwright-report&apos;,
                                reportFiles: &apos;index.html&apos;,
                                reportName: &apos;Playwright Report&apos;
                            ])
                            
                            archiveArtifacts artifacts: &apos;playwright-report/**/*&apos;, fingerprint: true
                        } catch (Exception e) {
                            echo &quot;Publishing failed: ${e.getMessage()}&quot;
                        }</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        </steps>
                      </branch>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                      <condition>failure</condition>
                      <branch>
                        <name>default</name>
                        <steps>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                            <name>script</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>scriptBlock</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">try {
                            archiveArtifacts artifacts: &apos;test-results/**/*&apos;, fingerprint: true
                        } catch (Exception e) {
                            echo &quot;Test results archiving failed: ${e.getMessage()}&quot;
                        }</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        </steps>
                      </branch>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                  </conditions>
                </post>
                <name>Run Tests</name>
                <branches/>
                <parallel>
                  <stages>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <when>
                        <conditions>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTWhenExpression>
                            <name>expression</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>scriptBlock</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">params.RUN_API == true</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTWhenExpression>
                        </conditions>
                      </when>
                      <name>API Tests</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                              <name>script</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                <arguments class="linked-hash-map">
                                  <entry>
                                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                      <key>scriptBlock</key>
                                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      <value class="string">sh &quot;&quot;&quot;
                                docker run --rm \\
                                -v ${env.HOST_PROJECT_PATH}:/app \\
                                -w /app \\
                                -e TEST_USER=${env.TEST_USER} \\
                                -e TEST_PASSWORD=${env.TEST_PASSWORD} \\
                                -e BASE_URL=${env.BASE_URL} \\
                                -e API_KEY=${env.API_KEY} \\
                                playwright-tests \\
                                npx playwright test tests/api --config=api.config.ts --grep &quot;${env.GREP_PATTERN}&quot;
                            &quot;&quot;&quot;</value>
                                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                  </entry>
                                </arguments>
                              </args>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <when>
                        <conditions>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTWhenExpression>
                            <name>expression</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>scriptBlock</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">params.RUN_VISUAL == true</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTWhenExpression>
                        </conditions>
                      </when>
                      <name>Visual Tests</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                              <name>script</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                <arguments class="linked-hash-map">
                                  <entry>
                                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                      <key>scriptBlock</key>
                                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      <value class="string">env.BROWSERS.split(&apos;,&apos;).each { browser -&gt;
                                sh &quot;&quot;&quot;
                                    docker run --rm \\
                                    -v ${env.HOST_PROJECT_PATH}:/app \\
                                    -w /app \\
                                    -e TEST_USER=${env.TEST_USER} \\
                                    -e TEST_PASSWORD=${env.TEST_PASSWORD} \\
                                    -e BASE_URL=${env.BASE_URL} \\
                                    -e API_KEY=${env.API_KEY} \\
                                    playwright-tests \\
                                    npx playwright test tests/visual --config=visual.config.ts --grep &quot;${env.GREP_PATTERN}&quot; --project=${browser}
                                &quot;&quot;&quot;
                            }</value>
                                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                  </entry>
                                </arguments>
                              </args>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                      <when>
                        <conditions>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTWhenExpression>
                            <name>expression</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>scriptBlock</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">params.RUN_E2E == true</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTWhenExpression>
                        </conditions>
                      </when>
                      <name>E2E Tests</name>
                      <branches>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                          <name>default</name>
                          <steps>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                              <name>script</name>
                              <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                                <arguments class="linked-hash-map">
                                  <entry>
                                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                      <key>scriptBlock</key>
                                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                      <value class="string">env.BROWSERS.split(&apos;,&apos;).each { browser -&gt;
                                sh &quot;&quot;&quot;
                                    docker run --rm \\
                                    -v ${env.HOST_PROJECT_PATH}:/app \\
                                    -w /app \\
                                    -e TEST_USER=${env.TEST_USER} \\
                                    -e TEST_PASSWORD=${env.TEST_PASSWORD} \\
                                    -e BASE_URL=${env.BASE_URL} \\
                                    -e API_KEY=${env.API_KEY} \\
                                    playwright-tests \\
                                    npx playwright test tests/e2e --config=playwright.config.ts --grep &quot;${env.GREP_PATTERN}&quot; --project=${browser}
                                &quot;&quot;&quot;
                            }</value>
                                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                  </entry>
                                </arguments>
                              </args>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                          </steps>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                      </branches>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                  </stages>
                  <uuid>9fd3e34c-5fad-4064-98b5-a8d203c53b37</uuid>
                </parallel>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>527cb6db-e3ae-4978-846b-5c8907594c57</uuid>
          </stages>
          <postBuild>
            <conditions>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                <condition>always</condition>
                <branch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>echo</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>message</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">Pipeline completed!</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </branch>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                <condition>success</condition>
                <branch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>echo</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>message</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">✅ All tests passed!</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </branch>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                <condition>failure</condition>
                <branch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>echo</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>message</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">❌ Some tests failed!</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </branch>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
            </conditions>
          </postBuild>
          <environment>
            <variables class="linked-hash-map">
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>TEST_USER</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTInternalFunctionCall>
                  <name>credentials</name>
                  <args>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                      <value class="string">test-user</value>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  </args>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTInternalFunctionCall>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>TEST_PASSWORD</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTInternalFunctionCall>
                  <name>credentials</name>
                  <args>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                      <value class="string">test-password</value>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  </args>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTInternalFunctionCall>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>BASE_URL</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTInternalFunctionCall>
                  <name>credentials</name>
                  <args>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                      <value class="string">base-url</value>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  </args>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTInternalFunctionCall>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>API_KEY</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTInternalFunctionCall>
                  <name>credentials</name>
                  <args>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                      <value class="string">api-key</value>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  </args>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTInternalFunctionCall>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>HOST_PROJECT_PATH</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">/d/ts-playwright</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
            </variables>
          </environment>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
          <parameters>
            <parameters>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
                <name>booleanParam</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>name</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">RUN_SMOKE</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>defaultValue</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="boolean">true</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>description</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">Run smoke tests</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
                <name>booleanParam</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>name</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">RUN_REGRESSION</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>defaultValue</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="boolean">false</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>description</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">Run regression tests</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
                <name>booleanParam</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>name</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">RUN_API</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>defaultValue</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="boolean">true</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>description</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">Include API tests</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
                <name>booleanParam</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>name</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">RUN_VISUAL</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>defaultValue</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="boolean">true</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>description</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">Include visual regression tests</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
                <name>booleanParam</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>name</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">RUN_E2E</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>defaultValue</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="boolean">true</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>description</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">Include E2E tests</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
                <name>booleanParam</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>name</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">RUN_CHROME</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>defaultValue</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="boolean">true</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>description</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">Run tests in Chrome</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
                <name>booleanParam</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>name</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">RUN_FIREFOX</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>defaultValue</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="boolean">false</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>description</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">Run tests in Firefox</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
                <name>booleanParam</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>name</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">RUN_WEBKIT</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>defaultValue</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="boolean">false</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>description</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">Run tests in WebKit</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
            </parameters>
          </parameters>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@1415.v831096eb_5534">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@4106.v7a_8a_8176d450">
      <env class="tree-map">
        <entry>
          <string>BROWSERS</string>
          <string>Chrome</string>
        </entry>
        <entry>
          <string>GREP_PATTERN</string>
          <string></string>
        </entry>
      </env>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <org.jenkinsci.plugins.workflow.cps.view.InterpolatedSecretsAction plugin="workflow-cps@4106.v7a_8a_8176d450">
      <interpolatedWarnings>
        <org.jenkinsci.plugins.workflow.cps.view.InterpolatedSecretsAction_-InterpolatedWarnings>
          <stepName>sh</stepName>
          <interpolatedVariables>
            <string>API_KEY</string>
            <string>TEST_PASSWORD</string>
            <string>TEST_USER</string>
            <string>BASE_URL</string>
          </interpolatedVariables>
        </org.jenkinsci.plugins.workflow.cps.view.InterpolatedSecretsAction_-InterpolatedWarnings>
      </interpolatedWarnings>
    </org.jenkinsci.plugins.workflow.cps.view.InterpolatedSecretsAction>
    <htmlpublisher.HtmlPublisherTarget_-HTMLBuildAction plugin="htmlpublisher@425">
      <actualHtmlPublisherTarget>
        <reportName>Playwright Report</reportName>
        <reportDir>playwright-report</reportDir>
        <reportFiles>index.html</reportFiles>
        <alwaysLinkToLastBuild>true</alwaysLinkToLastBuild>
        <keepAll>true</keepAll>
        <allowMissing>false</allowMissing>
        <numberOfWorkers>0</numberOfWorkers>
      </actualHtmlPublisherTarget>
      <outer-class reference="../actualHtmlPublisherTarget"/>
      <wrapperChecksum>85210e3072d8a8d31b67146df9f18772fbeefbda</wrapperChecksum>
      <outer-class defined-in="htmlpublisher.HtmlPublisherTarget$HTMLBuildAction" reference="../actualHtmlPublisherTarget"/>
    </htmlpublisher.HtmlPublisherTarget_-HTMLBuildAction>
    <hudson.tasks.Fingerprinter_-FingerprintAction>
      <record>
        <entry>
          <string>playwright-report/index.html</string>
          <string>e4056c9bc832c3aa4ebd24942fd538fc</string>
        </entry>
      </record>
    </hudson.tasks.Fingerprinter_-FingerprintAction>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.32-476.v5042e1c1edd7">
      <queuingDurationMillis>35</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>31</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>51227</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
  </actions>
  <queueId>26</queueId>
  <timestamp>1748423626033</timestamp>
  <startTime>1748423626094</startTime>
  <result>SUCCESS</result>
  <duration>60290</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>pipeline {
    agent any

    parameters {
        // Test type parameters
        booleanParam(name: &apos;RUN_SMOKE&apos;, defaultValue: true, description: &apos;Run smoke tests&apos;)
        booleanParam(name: &apos;RUN_REGRESSION&apos;, defaultValue: false, description: &apos;Run regression tests&apos;)
        booleanParam(name: &apos;RUN_API&apos;, defaultValue: true, description: &apos;Include API tests&apos;)
        booleanParam(name: &apos;RUN_VISUAL&apos;, defaultValue: true, description: &apos;Include visual regression tests&apos;)
        booleanParam(name: &apos;RUN_E2E&apos;, defaultValue: true, description: &apos;Include E2E tests&apos;)
        
        // Browser parameters
        booleanParam(name: &apos;RUN_CHROME&apos;, defaultValue: true, description: &apos;Run tests in Chrome&apos;)
        booleanParam(name: &apos;RUN_FIREFOX&apos;, defaultValue: false, description: &apos;Run tests in Firefox&apos;)
        booleanParam(name: &apos;RUN_WEBKIT&apos;, defaultValue: false, description: &apos;Run tests in WebKit&apos;)
    }

    environment {
        TEST_USER = credentials(&apos;test-user&apos;)
        TEST_PASSWORD = credentials(&apos;test-password&apos;)
        BASE_URL = credentials(&apos;base-url&apos;)
        API_KEY = credentials(&apos;api-key&apos;)
        // Use the host path directly for Docker volume mounting
        HOST_PROJECT_PATH = &apos;/d/ts-playwright&apos;
    }
 
    stages {
        stage(&apos;Setup&apos;) {
            steps {
                script {
                    // Test tags helper
                    def getTestTags = {
                        def tags = []
                        if (params.RUN_SMOKE) tags.add(&apos;@smoke&apos;)
                        if (params.RUN_REGRESSION) tags.add(&apos;@regression&apos;)
                        return tags.join(&apos;|&apos;)
                    }

                    // Browser selection helper
                    def getSelectedBrowsers = {
                        def browsers = []
                        if (params.RUN_CHROME) browsers.add(&apos;Chrome&apos;)
                        if (params.RUN_FIREFOX) browsers.add(&apos;Firefox&apos;)
                        if (params.RUN_WEBKIT) browsers.add(&apos;Webkit&apos;)
                        return browsers
                    }

                    // Store for use in other stages
                    env.GREP_PATTERN = getTestTags()
                    env.BROWSERS = getSelectedBrowsers().join(&apos;,&apos;)
                }
                
                // Use Docker for setup with host path
                script {
                    sh &quot;&quot;&quot;
                        docker run --rm \\
                        -v ${env.HOST_PROJECT_PATH}:/app \\
                        -w /app \\
                        playwright-tests \\
                        npm ci
                    &quot;&quot;&quot;
                }
            }
        }      

        stage(&apos;Validate Environment&apos;) {
            steps {
                script {
                    if (!env.BROWSERS) {
                        error &apos;No browsers selected for testing&apos;
                    }
                    if (!env.GREP_PATTERN) {
                        echo &apos;No test patterns selected, will run all tests&apos;
                    }
                    echo &quot;Selected Browsers: ${env.BROWSERS}&quot;
                    echo &quot;Test Pattern: ${env.GREP_PATTERN}&quot;
                }
            }
        }

        stage(&apos;Run Tests&apos;) { 
            parallel {
                stage(&apos;API Tests&apos;) {
                    when { expression { params.RUN_API == true } }
                    steps {
                        script {
                            sh &quot;&quot;&quot;
                                docker run --rm \\
                                -v ${env.HOST_PROJECT_PATH}:/app \\
                                -w /app \\
                                -e TEST_USER=${env.TEST_USER} \\
                                -e TEST_PASSWORD=${env.TEST_PASSWORD} \\
                                -e BASE_URL=${env.BASE_URL} \\
                                -e API_KEY=${env.API_KEY} \\
                                playwright-tests \\
                                npx playwright test tests/api --config=api.config.ts --grep &quot;${env.GREP_PATTERN}&quot;
                            &quot;&quot;&quot;
                        }
                    }
                }
                stage(&apos;Visual Tests&apos;) {
                    when { expression { params.RUN_VISUAL == true } }
                    steps {
                        script {
                            env.BROWSERS.split(&apos;,&apos;).each { browser -&gt;
                                sh &quot;&quot;&quot;
                                    docker run --rm \\
                                    -v ${env.HOST_PROJECT_PATH}:/app \\
                                    -w /app \\
                                    -e TEST_USER=${env.TEST_USER} \\
                                    -e TEST_PASSWORD=${env.TEST_PASSWORD} \\
                                    -e BASE_URL=${env.BASE_URL} \\
                                    -e API_KEY=${env.API_KEY} \\
                                    playwright-tests \\
                                    npx playwright test tests/visual --config=visual.config.ts --grep &quot;${env.GREP_PATTERN}&quot; --project=${browser}
                                &quot;&quot;&quot;
                            }
                        }
                    }
                }
                stage(&apos;E2E Tests&apos;) {
                    when { expression { params.RUN_E2E == true } }
                    steps {
                        script {
                            env.BROWSERS.split(&apos;,&apos;).each { browser -&gt;
                                sh &quot;&quot;&quot;
                                    docker run --rm \\
                                    -v ${env.HOST_PROJECT_PATH}:/app \\
                                    -w /app \\
                                    -e TEST_USER=${env.TEST_USER} \\
                                    -e TEST_PASSWORD=${env.TEST_PASSWORD} \\
                                    -e BASE_URL=${env.BASE_URL} \\
                                    -e API_KEY=${env.API_KEY} \\
                                    playwright-tests \\
                                    npx playwright test tests/e2e --config=playwright.config.ts --grep &quot;${env.GREP_PATTERN}&quot; --project=${browser}
                                &quot;&quot;&quot;
                            }
                        }
                    }
                }
            }
            post {
                always {
                    // Copy reports from host to workspace for Jenkins to access
                    script {
                        try {
                            sh &quot;&quot;&quot;
                                docker run --rm \\
                                -v ${env.HOST_PROJECT_PATH}:/app \\
                                -v ${env.WORKSPACE}:/workspace \\
                                -w /app \\
                                playwright-tests \\
                                sh -c &quot;cp -r playwright-report /workspace/ 2&gt;/dev/null || true; cp -r test-results /workspace/ 2&gt;/dev/null || true&quot;
                            &quot;&quot;&quot;
                            
                            publishHTML([
                                allowMissing: false,
                                alwaysLinkToLastBuild: true,
                                keepAll: true,
                                reportDir: &apos;playwright-report&apos;,
                                reportFiles: &apos;index.html&apos;,
                                reportName: &apos;Playwright Report&apos;
                            ])
                            
                            archiveArtifacts artifacts: &apos;playwright-report/**/*&apos;, fingerprint: true
                        } catch (Exception e) {
                            echo &quot;Publishing failed: ${e.getMessage()}&quot;
                        }
                    }
                }
                failure {
                    script {
                        try {
                            archiveArtifacts artifacts: &apos;test-results/**/*&apos;, fingerprint: true
                        } catch (Exception e) {
                            echo &quot;Test results archiving failed: ${e.getMessage()}&quot;
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo &apos;Pipeline completed!&apos;
        }
        success {
            echo &apos;✅ All tests passed!&apos;
        }
        failure {
            echo &apos;❌ Some tests failed!&apos;
        }
    }
}</script>
    <loadedScripts class="linked-hash-map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>2645332168</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>4751030728</long>
      </entry>
      <entry>
        <string>runQueue</string>
        <long>60632079781</long>
      </entry>
      <entry>
        <string>run</string>
        <long>24008366954</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>4907506013</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>14778319769</long>
      </entry>
    </timings>
    <internalCalls class="sorted-set">
      <string>hudson.model.Result.fromString</string>
      <string>org.jenkinsci.plugins.pipeline.StageStatus.TAG_NAME</string>
      <string>org.jenkinsci.plugins.workflow.job.WorkflowRun.result</string>
    </internalCalls>
    <sandbox>true</sandbox>
    <iota>85</iota>
    <head>1:85</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
    <storageDir>workflow-completed</storageDir>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>